;; From GstAASink

(define-signal frame-displayed
  (of-object "GstAASink")
  (return-type "void")
  (when "last")
)

(define-signal have-size
  (of-object "GstAASink")
  (return-type "void")
  (when "last")
  (parameters
    '("guint" "p0")
    '("guint" "p1")
  )
)

(define-property name
  (of-object "GstAASink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preroll-queue-len
  (of-object "GstAASink")
  (prop-type "GParamUInt")
  (docs "Number of buffers to queue during preroll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sync
  (of-object "GstAASink")
  (prop-type "GParamBoolean")
  (docs "Sync on the clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-lateness
  (of-object "GstAASink")
  (prop-type "GParamInt64")
  (docs "Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAASink")
  (prop-type "GParamBoolean")
  (docs "Generate Quality-of-Service events upstream")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async
  (of-object "GstAASink")
  (prop-type "GParamBoolean")
  (docs "Go asynchronously to PAUSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ts-offset
  (of-object "GstAASink")
  (prop-type "GParamInt64")
  (docs "Timestamp offset in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property last-buffer
  (of-object "GstAASink")
  (prop-type "GParamSpecMiniObject")
  (docs "The last buffer received in the sink")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstAASink")
  (prop-type "GParamUInt")
  (docs "Size in bytes to pull per buffer (0 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property render-delay
  (of-object "GstAASink")
  (prop-type "GParamUInt64")
  (docs "Additional render delay of the sink in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width
  (of-object "GstAASink")
  (prop-type "GParamInt")
  (docs "width")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height
  (of-object "GstAASink")
  (prop-type "GParamInt")
  (docs "height")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property driver
  (of-object "GstAASink")
  (prop-type "GParamEnum")
  (docs "driver")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property dither
  (of-object "GstAASink")
  (prop-type "GParamEnum")
  (docs "dither")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property brightness
  (of-object "GstAASink")
  (prop-type "GParamInt")
  (docs "brightness")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property contrast
  (of-object "GstAASink")
  (prop-type "GParamInt")
  (docs "contrast")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gamma
  (of-object "GstAASink")
  (prop-type "GParamFloat")
  (docs "gamma")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inversion
  (of-object "GstAASink")
  (prop-type "GParamBoolean")
  (docs "inversion")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property randomval
  (of-object "GstAASink")
  (prop-type "GParamInt")
  (docs "randomval")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property frames-displayed
  (of-object "GstAASink")
  (prop-type "GParamInt")
  (docs "frames_displayed")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property frame-time
  (of-object "GstAASink")
  (prop-type "GParamInt")
  (docs "frame_time")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GstAlphaColor

(define-property name
  (of-object "GstAlphaColor")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAlphaColor")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstApeDemux

(define-property name
  (of-object "GstApeDemux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstApev2Mux

(define-property name
  (of-object "GstApev2Mux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAudioAmplify

(define-property name
  (of-object "GstAudioAmplify")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAudioAmplify")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property amplification
  (of-object "GstAudioAmplify")
  (prop-type "GParamFloat")
  (docs "Factor of amplification")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property clipping-method
  (of-object "GstAudioAmplify")
  (prop-type "GParamEnum")
  (docs "Selects how to handle values higher than the maximum")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAudioChebBand

(define-property name
  (of-object "GstAudioChebBand")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAudioChebBand")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mode
  (of-object "GstAudioChebBand")
  (prop-type "GParamEnum")
  (docs "Low pass or high pass mode")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property type
  (of-object "GstAudioChebBand")
  (prop-type "GParamInt")
  (docs "Type of the chebychev filter")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property lower-frequency
  (of-object "GstAudioChebBand")
  (prop-type "GParamFloat")
  (docs "Start frequency of the band (Hz)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property upper-frequency
  (of-object "GstAudioChebBand")
  (prop-type "GParamFloat")
  (docs "Stop frequency of the band (Hz)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ripple
  (of-object "GstAudioChebBand")
  (prop-type "GParamFloat")
  (docs "Amount of ripple (dB)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property poles
  (of-object "GstAudioChebBand")
  (prop-type "GParamInt")
  (docs "Number of poles to use, will be rounded up to the next multiply of four")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAudioChebLimit

(define-property name
  (of-object "GstAudioChebLimit")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAudioChebLimit")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mode
  (of-object "GstAudioChebLimit")
  (prop-type "GParamEnum")
  (docs "Low pass or high pass mode")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property type
  (of-object "GstAudioChebLimit")
  (prop-type "GParamInt")
  (docs "Type of the chebychev filter")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cutoff
  (of-object "GstAudioChebLimit")
  (prop-type "GParamFloat")
  (docs "Cut off frequency (Hz)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ripple
  (of-object "GstAudioChebLimit")
  (prop-type "GParamFloat")
  (docs "Amount of ripple (dB)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property poles
  (of-object "GstAudioChebLimit")
  (prop-type "GParamInt")
  (docs "Number of poles to use, will be rounded up to the next even number")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAudioWSincBand

(define-property name
  (of-object "GstAudioWSincBand")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAudioWSincBand")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property length
  (of-object "GstAudioWSincBand")
  (prop-type "GParamInt")
  (docs "Filter kernel length, will be rounded to the next odd number")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property lower-frequency
  (of-object "GstAudioWSincBand")
  (prop-type "GParamFloat")
  (docs "Cut-off lower frequency (Hz)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property upper-frequency
  (of-object "GstAudioWSincBand")
  (prop-type "GParamFloat")
  (docs "Cut-off upper frequency (Hz)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mode
  (of-object "GstAudioWSincBand")
  (prop-type "GParamEnum")
  (docs "Band pass or band reject mode")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "GstAudioWSincBand")
  (prop-type "GParamEnum")
  (docs "Window function to use")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAudioWSincLimit

(define-property name
  (of-object "GstAudioWSincLimit")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAudioWSincLimit")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property length
  (of-object "GstAudioWSincLimit")
  (prop-type "GParamInt")
  (docs "Filter kernel length, will be rounded to the next odd number")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cutoff
  (of-object "GstAudioWSincLimit")
  (prop-type "GParamFloat")
  (docs "Cut-off Frequency (Hz)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mode
  (of-object "GstAudioWSincLimit")
  (prop-type "GParamEnum")
  (docs "Low pass or high pass mode")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "GstAudioWSincLimit")
  (prop-type "GParamEnum")
  (docs "Window function to use")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAudioDynamic

(define-property name
  (of-object "GstAudioDynamic")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAudioDynamic")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property characteristics
  (of-object "GstAudioDynamic")
  (prop-type "GParamEnum")
  (docs "Selects whether the ratio should be applied smooth (soft-knee) or hard (hard-knee).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mode
  (of-object "GstAudioDynamic")
  (prop-type "GParamEnum")
  (docs "Selects whether the filter should work on loud samples (compressor) orquiet samples (expander).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property threshold
  (of-object "GstAudioDynamic")
  (prop-type "GParamFloat")
  (docs "Threshold until the filter is activated")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ratio
  (of-object "GstAudioDynamic")
  (prop-type "GParamFloat")
  (docs "Ratio that should be applied")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAudioInvert

(define-property name
  (of-object "GstAudioInvert")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAudioInvert")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property degree
  (of-object "GstAudioInvert")
  (prop-type "GParamFloat")
  (docs "Degree of inversion")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAudioPanorama

(define-property name
  (of-object "GstAudioPanorama")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAudioPanorama")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property panorama
  (of-object "GstAudioPanorama")
  (prop-type "GParamFloat")
  (docs "Position in stereo panorama (-1.0 left -> 1.0 right)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property method
  (of-object "GstAudioPanorama")
  (prop-type "GParamEnum")
  (docs "Psychoacoustic mode keeps same perceived loudness, simple mode just controls volume of one channel.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAudioKaraoke

(define-property name
  (of-object "GstAudioKaraoke")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstAudioKaraoke")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property level
  (of-object "GstAudioKaraoke")
  (prop-type "GParamFloat")
  (docs "Level of the effect (1.0 = full)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mono-level
  (of-object "GstAudioKaraoke")
  (prop-type "GParamFloat")
  (docs "Level of the mono channel (1.0 = full)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property filter-band
  (of-object "GstAudioKaraoke")
  (prop-type "GParamFloat")
  (docs "The Frequency band of the filter")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property filter-width
  (of-object "GstAudioKaraoke")
  (prop-type "GParamFloat")
  (docs "The Frequency width of the filter")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAutoAudioSink

(define-property name
  (of-object "GstAutoAudioSink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async-handling
  (of-object "GstAutoAudioSink")
  (prop-type "GParamBoolean")
  (docs "The bin will handle Asynchronous state changes")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property filter-caps
  (of-object "GstAutoAudioSink")
  (prop-type "GParamBoxed")
  (docs "Filter sink candidates using these caps.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAutoVideoSink

(define-property name
  (of-object "GstAutoVideoSink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async-handling
  (of-object "GstAutoVideoSink")
  (prop-type "GParamBoolean")
  (docs "The bin will handle Asynchronous state changes")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property filter-caps
  (of-object "GstAutoVideoSink")
  (prop-type "GParamBoxed")
  (docs "Filter sink candidates using these caps.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAviDemux

(define-property name
  (of-object "GstAviDemux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAviMux

(define-property name
  (of-object "GstAviMux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property bigfile
  (of-object "GstAviMux")
  (prop-type "GParamBoolean")
  (docs "Support for openDML-2.0 (big) AVI files")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstAviSubtitle

(define-property name
  (of-object "GstAviSubtitle")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstCACASink

(define-property name
  (of-object "GstCACASink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preroll-queue-len
  (of-object "GstCACASink")
  (prop-type "GParamUInt")
  (docs "Number of buffers to queue during preroll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sync
  (of-object "GstCACASink")
  (prop-type "GParamBoolean")
  (docs "Sync on the clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-lateness
  (of-object "GstCACASink")
  (prop-type "GParamInt64")
  (docs "Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstCACASink")
  (prop-type "GParamBoolean")
  (docs "Generate Quality-of-Service events upstream")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async
  (of-object "GstCACASink")
  (prop-type "GParamBoolean")
  (docs "Go asynchronously to PAUSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ts-offset
  (of-object "GstCACASink")
  (prop-type "GParamInt64")
  (docs "Timestamp offset in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property last-buffer
  (of-object "GstCACASink")
  (prop-type "GParamSpecMiniObject")
  (docs "The last buffer received in the sink")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstCACASink")
  (prop-type "GParamUInt")
  (docs "Size in bytes to pull per buffer (0 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property render-delay
  (of-object "GstCACASink")
  (prop-type "GParamUInt64")
  (docs "Additional render delay of the sink in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property screen-width
  (of-object "GstCACASink")
  (prop-type "GParamInt")
  (docs "The width of the screen")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property screen-height
  (of-object "GstCACASink")
  (prop-type "GParamInt")
  (docs "The height of the screen")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property dither
  (of-object "GstCACASink")
  (prop-type "GParamEnum")
  (docs "Set type of Dither")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property anti-aliasing
  (of-object "GstCACASink")
  (prop-type "GParamBoolean")
  (docs "Enables Anti-Aliasing")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstCairoTimeOverlay

(define-property name
  (of-object "GstCairoTimeOverlay")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstCairoTimeOverlay")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstCmmlDec

(define-property name
  (of-object "GstCmmlDec")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wait-clip-end-time
  (of-object "GstCmmlDec")
  (prop-type "GParamBoolean")
  (docs "Send a tag for a clip when the clip ends, setting its end-time. Use when you need to know both clip's start-time and end-time.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstCmmlEnc

(define-property name
  (of-object "GstCmmlEnc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property granule-rate-numerator
  (of-object "GstCmmlEnc")
  (prop-type "GParamInt64")
  (docs "Granulerate numerator")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property granule-rate-denominator
  (of-object "GstCmmlEnc")
  (prop-type "GParamInt64")
  (docs "Granulerate denominator")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property granule-shift
  (of-object "GstCmmlEnc")
  (prop-type "GParamUChar")
  (docs "The number of lower bits to use for partitioning a granule position")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstDeinterleave

(define-property name
  (of-object "GstDeinterleave")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property keep-positions
  (of-object "GstDeinterleave")
  (prop-type "GParamBoolean")
  (docs "Keep the original channel positions on the output buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstDV1394Src

(define-signal frame-dropped
  (of-object "GstDV1394Src")
  (return-type "void")
  (when "last")
)

(define-property name
  (of-object "GstDV1394Src")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstDV1394Src")
  (prop-type "GParamULong")
  (docs "Size in bytes to read per buffer (-1 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-buffers
  (of-object "GstDV1394Src")
  (prop-type "GParamInt")
  (docs "Number of buffers to output before sending EOS (-1 = unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property typefind
  (of-object "GstDV1394Src")
  (prop-type "GParamBoolean")
  (docs "Run typefind before negotiating")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-timestamp
  (of-object "GstDV1394Src")
  (prop-type "GParamBoolean")
  (docs "Apply current stream time to buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property port
  (of-object "GstDV1394Src")
  (prop-type "GParamInt")
  (docs "Port number (-1 automatic)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property channel
  (of-object "GstDV1394Src")
  (prop-type "GParamInt")
  (docs "Channel number for listening")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property consecutive
  (of-object "GstDV1394Src")
  (prop-type "GParamInt")
  (docs "send n consecutive frames after skipping")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property skip
  (of-object "GstDV1394Src")
  (prop-type "GParamInt")
  (docs "skip n frames")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property drop-incomplete
  (of-object "GstDV1394Src")
  (prop-type "GParamBoolean")
  (docs "drop incomplete frames")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-avc
  (of-object "GstDV1394Src")
  (prop-type "GParamBoolean")
  (docs "Use AV/C VTR control")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property guid
  (of-object "GstDV1394Src")
  (prop-type "GParamUInt64")
  (docs "select one of multiple DV devices by its GUID. use a hexadecimal like 0xhhhhhhhhhhhhhhhh. (0 = no guid)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device-name
  (of-object "GstDV1394Src")
  (prop-type "GParamString")
  (docs "user-friendly name of the device")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GstHDV1394Src

(define-property name
  (of-object "GstHDV1394Src")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstHDV1394Src")
  (prop-type "GParamULong")
  (docs "Size in bytes to read per buffer (-1 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-buffers
  (of-object "GstHDV1394Src")
  (prop-type "GParamInt")
  (docs "Number of buffers to output before sending EOS (-1 = unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property typefind
  (of-object "GstHDV1394Src")
  (prop-type "GParamBoolean")
  (docs "Run typefind before negotiating")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-timestamp
  (of-object "GstHDV1394Src")
  (prop-type "GParamBoolean")
  (docs "Apply current stream time to buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property port
  (of-object "GstHDV1394Src")
  (prop-type "GParamInt")
  (docs "Port number (-1 automatic)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property channel
  (of-object "GstHDV1394Src")
  (prop-type "GParamInt")
  (docs "Channel number for listening")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-avc
  (of-object "GstHDV1394Src")
  (prop-type "GParamBoolean")
  (docs "Use AV/C VTR control")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property guid
  (of-object "GstHDV1394Src")
  (prop-type "GParamUInt64")
  (docs "select one of multiple DV devices by its GUID. use a hexadecimal like 0xhhhhhhhhhhhhhhhh. (0 = no guid)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device-name
  (of-object "GstHDV1394Src")
  (prop-type "GParamString")
  (docs "user-friendly name of the device")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GstDVDec

(define-property name
  (of-object "GstDVDec")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property clamp-luma
  (of-object "GstDVDec")
  (prop-type "GParamBoolean")
  (docs "Clamp luma")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property clamp-chroma
  (of-object "GstDVDec")
  (prop-type "GParamBoolean")
  (docs "Clamp chroma")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property quality
  (of-object "GstDVDec")
  (prop-type "GParamEnum")
  (docs "Decoding quality")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property drop-factor
  (of-object "GstDVDec")
  (prop-type "GParamInt")
  (docs "Only decode Nth frame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstDVDemux

(define-property name
  (of-object "GstDVDemux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstIirEqualizer10Bands

(define-property name
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band0
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 29 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band1
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 59 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band2
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 119 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band3
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 227 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band4
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 474 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band5
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 947 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band6
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 1889 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band7
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 3770 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band8
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 7523 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band9
  (of-object "GstIirEqualizer10Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 15011 Hz, ranging from -24 dB to +12 dB")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstIirEqualizer3Bands

(define-property name
  (of-object "GstIirEqualizer3Bands")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstIirEqualizer3Bands")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band0
  (of-object "GstIirEqualizer3Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 100 Hz, ranging from -24.0 to +12.0")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band1
  (of-object "GstIirEqualizer3Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 1100 Hz, ranging from -24.0 to +12.0")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property band2
  (of-object "GstIirEqualizer3Bands")
  (prop-type "GParamDouble")
  (docs "gain for the frequency band 11 kHz, ranging from -24.0 to +12.0")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstIirEqualizerNBands

(define-property name
  (of-object "GstIirEqualizerNBands")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstIirEqualizerNBands")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-bands
  (of-object "GstIirEqualizerNBands")
  (prop-type "GParamUInt")
  (docs "number of different bands to use")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstEsdSink

(define-property name
  (of-object "GstEsdSink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preroll-queue-len
  (of-object "GstEsdSink")
  (prop-type "GParamUInt")
  (docs "Number of buffers to queue during preroll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sync
  (of-object "GstEsdSink")
  (prop-type "GParamBoolean")
  (docs "Sync on the clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-lateness
  (of-object "GstEsdSink")
  (prop-type "GParamInt64")
  (docs "Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstEsdSink")
  (prop-type "GParamBoolean")
  (docs "Generate Quality-of-Service events upstream")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async
  (of-object "GstEsdSink")
  (prop-type "GParamBoolean")
  (docs "Go asynchronously to PAUSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ts-offset
  (of-object "GstEsdSink")
  (prop-type "GParamInt64")
  (docs "Timestamp offset in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property last-buffer
  (of-object "GstEsdSink")
  (prop-type "GParamSpecMiniObject")
  (docs "The last buffer received in the sink")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstEsdSink")
  (prop-type "GParamUInt")
  (docs "Size in bytes to pull per buffer (0 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property render-delay
  (of-object "GstEsdSink")
  (prop-type "GParamUInt64")
  (docs "Additional render delay of the sink in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer-time
  (of-object "GstEsdSink")
  (prop-type "GParamInt64")
  (docs "Size of audio buffer in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property latency-time
  (of-object "GstEsdSink")
  (prop-type "GParamInt64")
  (docs "Audio latency in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property provide-clock
  (of-object "GstEsdSink")
  (prop-type "GParamBoolean")
  (docs "Provide a clock to be used as the global pipeline clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property slave-method
  (of-object "GstEsdSink")
  (prop-type "GParamEnum")
  (docs "Algorithm to use to match the rate of the masterclock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property host
  (of-object "GstEsdSink")
  (prop-type "GParamString")
  (docs "The host running the esound daemon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstFlacDec

(define-property name
  (of-object "GstFlacDec")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstFlacEnc

(define-property name
  (of-object "GstFlacEnc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property quality
  (of-object "GstFlacEnc")
  (prop-type "GParamEnum")
  (docs "Speed versus compression tradeoff")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property streamable-subset
  (of-object "GstFlacEnc")
  (prop-type "GParamBoolean")
  (docs "true to limit encoder to generating a Subset stream, else false")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mid-side-stereo
  (of-object "GstFlacEnc")
  (prop-type "GParamBoolean")
  (docs "Do mid side stereo (only for stereo input)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property loose-mid-side-stereo
  (of-object "GstFlacEnc")
  (prop-type "GParamBoolean")
  (docs "Loose mid side stereo")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstFlacEnc")
  (prop-type "GParamUInt")
  (docs "Blocksize in samples")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-lpc-order
  (of-object "GstFlacEnc")
  (prop-type "GParamUInt")
  (docs "Max LPC order; 0 => use only fixed predictors")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qlp-coeff-precision
  (of-object "GstFlacEnc")
  (prop-type "GParamUInt")
  (docs "Precision in bits of quantized linear-predictor coefficients; 0 = automatic")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qlp-coeff-prec-search
  (of-object "GstFlacEnc")
  (prop-type "GParamBoolean")
  (docs "false = use qlp_coeff_precision, true = search around qlp_coeff_precision, take best")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property escape-coding
  (of-object "GstFlacEnc")
  (prop-type "GParamBoolean")
  (docs "search for escape codes in the entropy coding stage for slightly better compression")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property exhaustive-model-search
  (of-object "GstFlacEnc")
  (prop-type "GParamBoolean")
  (docs "do exhaustive search of LP coefficient quantization (expensive!)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property min-residual-partition-order
  (of-object "GstFlacEnc")
  (prop-type "GParamUInt")
  (docs "Min residual partition order (above 4 doesn't usually help much)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-residual-partition-order
  (of-object "GstFlacEnc")
  (prop-type "GParamUInt")
  (docs "Max residual partition order (above 4 doesn't usually help much)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rice-parameter-search-dist
  (of-object "GstFlacEnc")
  (prop-type "GParamUInt")
  (docs "0 = try only calc'd parameter k; else try all [k-dist..k+dist] parameters, use best")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstFlacTag

(define-property name
  (of-object "GstFlacTag")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstGamma

(define-property name
  (of-object "GstGamma")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstGamma")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gamma
  (of-object "GstGamma")
  (prop-type "GParamDouble")
  (docs "gamma")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstGdkPixbufSink

(define-property name
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preroll-queue-len
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamUInt")
  (docs "Number of buffers to queue during preroll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sync
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamBoolean")
  (docs "Sync on the clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-lateness
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamInt64")
  (docs "Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamBoolean")
  (docs "Generate Quality-of-Service events upstream")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamBoolean")
  (docs "Go asynchronously to PAUSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ts-offset
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamInt64")
  (docs "Timestamp offset in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property last-buffer
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamSpecMiniObject")
  (docs "The last buffer received in the sink")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamUInt")
  (docs "Size in bytes to pull per buffer (0 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property render-delay
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamUInt64")
  (docs "Additional render delay of the sink in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property send-messages
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamBoolean")
  (docs "Whether to post messages containing pixbufs on the bus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property last-pixbuf
  (of-object "GstGdkPixbufSink")
  (prop-type "GParamObject")
  (docs "Last GdkPixbuf object rendered")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GstGoom

(define-property name
  (of-object "GstGoom")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstGoom2k1

(define-property name
  (of-object "GstGoom2k1")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstHalAudioSink

(define-property name
  (of-object "GstHalAudioSink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async-handling
  (of-object "GstHalAudioSink")
  (prop-type "GParamBoolean")
  (docs "The bin will handle Asynchronous state changes")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property udi
  (of-object "GstHalAudioSink")
  (prop-type "GParamString")
  (docs "Unique Device Id")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstHalAudioSrc

(define-property name
  (of-object "GstHalAudioSrc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async-handling
  (of-object "GstHalAudioSrc")
  (prop-type "GParamBoolean")
  (docs "The bin will handle Asynchronous state changes")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property udi
  (of-object "GstHalAudioSrc")
  (prop-type "GParamString")
  (docs "Unique Device Id")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstICYDemux

(define-property name
  (of-object "GstICYDemux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstID3Demux

(define-property name
  (of-object "GstID3Demux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property prefer-v1
  (of-object "GstID3Demux")
  (prop-type "GParamBoolean")
  (docs "Prefer tags from ID3v1 tag at end of file when both ID3v1 and ID3v2 tags are present")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstId3v2Mux

(define-property name
  (of-object "GstId3v2Mux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstInterleave

(define-property name
  (of-object "GstInterleave")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property channel-positions
  (of-object "GstInterleave")
  (prop-type "GParamValueArray")
  (docs "Channel positions used on the output")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property channel-positions-from-input
  (of-object "GstInterleave")
  (prop-type "GParamBoolean")
  (docs "Take channel positions from the input")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstJpegDec

(define-property name
  (of-object "GstJpegDec")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property idct-method
  (of-object "GstJpegDec")
  (prop-type "GParamEnum")
  (docs "The IDCT algorithm to use")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstJpegEnc

(define-signal frame-encoded
  (of-object "GstJpegEnc")
  (return-type "void")
  (when "last")
)

(define-property name
  (of-object "GstJpegEnc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property quality
  (of-object "GstJpegEnc")
  (prop-type "GParamInt")
  (docs "Quality of encoding")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstLevel

(define-property name
  (of-object "GstLevel")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstLevel")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property message
  (of-object "GstLevel")
  (prop-type "GParamBoolean")
  (docs "Post a level message for each passed interval")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property interval
  (of-object "GstLevel")
  (prop-type "GParamUInt64")
  (docs "Interval of time between message posts (in nanoseconds)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property peak-ttl
  (of-object "GstLevel")
  (prop-type "GParamUInt64")
  (docs "Time To Live of decay peak before it falls back (in nanoseconds)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property peak-falloff
  (of-object "GstLevel")
  (prop-type "GParamDouble")
  (docs "Decay rate of decay peak after TTL (in dB/sec)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstMonoscope

(define-property name
  (of-object "GstMonoscope")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstMultiFileSink

(define-property name
  (of-object "GstMultiFileSink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preroll-queue-len
  (of-object "GstMultiFileSink")
  (prop-type "GParamUInt")
  (docs "Number of buffers to queue during preroll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sync
  (of-object "GstMultiFileSink")
  (prop-type "GParamBoolean")
  (docs "Sync on the clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-lateness
  (of-object "GstMultiFileSink")
  (prop-type "GParamInt64")
  (docs "Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstMultiFileSink")
  (prop-type "GParamBoolean")
  (docs "Generate Quality-of-Service events upstream")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async
  (of-object "GstMultiFileSink")
  (prop-type "GParamBoolean")
  (docs "Go asynchronously to PAUSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ts-offset
  (of-object "GstMultiFileSink")
  (prop-type "GParamInt64")
  (docs "Timestamp offset in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property last-buffer
  (of-object "GstMultiFileSink")
  (prop-type "GParamSpecMiniObject")
  (docs "The last buffer received in the sink")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstMultiFileSink")
  (prop-type "GParamUInt")
  (docs "Size in bytes to pull per buffer (0 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property render-delay
  (of-object "GstMultiFileSink")
  (prop-type "GParamUInt64")
  (docs "Additional render delay of the sink in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property location
  (of-object "GstMultiFileSink")
  (prop-type "GParamString")
  (docs "Location of the file to write")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property index
  (of-object "GstMultiFileSink")
  (prop-type "GParamInt")
  (docs "Index to use with location property to create file names.  The index is incremented by one for each buffer read.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstMultiFileSrc

(define-property name
  (of-object "GstMultiFileSrc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstMultiFileSrc")
  (prop-type "GParamULong")
  (docs "Size in bytes to read per buffer (-1 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-buffers
  (of-object "GstMultiFileSrc")
  (prop-type "GParamInt")
  (docs "Number of buffers to output before sending EOS (-1 = unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property typefind
  (of-object "GstMultiFileSrc")
  (prop-type "GParamBoolean")
  (docs "Run typefind before negotiating")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-timestamp
  (of-object "GstMultiFileSrc")
  (prop-type "GParamBoolean")
  (docs "Apply current stream time to buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property location
  (of-object "GstMultiFileSrc")
  (prop-type "GParamString")
  (docs "Pattern to create file names of input files.  File names are created by calling sprintf() with the pattern and the current index.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property index
  (of-object "GstMultiFileSrc")
  (prop-type "GParamInt")
  (docs "Index to use with location property to create file names.  The index is incremented by one for each buffer read.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property caps
  (of-object "GstMultiFileSrc")
  (prop-type "GParamBoxed")
  (docs "Caps describing the format of the data.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstMultipartDemux

(define-property name
  (of-object "GstMultipartDemux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property autoscan
  (of-object "GstMultipartDemux")
  (prop-type "GParamBoolean")
  (docs "Try to autofind the prefix (deprecated unused, see boundary)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property boundary
  (of-object "GstMultipartDemux")
  (prop-type "GParamString")
  (docs "The boundary string separating data, automatic if NULL")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstMultipartMux

(define-property name
  (of-object "GstMultipartMux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property boundary
  (of-object "GstMultipartMux")
  (prop-type "GParamString")
  (docs "Boundary string")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstMultiUDPSink

(define-signal add
  (of-object "GstMultiUDPSink")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("gint" "p1")
  )
)

(define-signal remove
  (of-object "GstMultiUDPSink")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("gint" "p1")
  )
)

(define-signal clear
  (of-object "GstMultiUDPSink")
  (return-type "void")
  (when "last")
)

(define-signal get-stats
  (of-object "GstMultiUDPSink")
  (return-type "GValueArray*")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("gint" "p1")
  )
)

(define-signal client-added
  (of-object "GstMultiUDPSink")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("gint" "p1")
  )
)

(define-signal client-removed
  (of-object "GstMultiUDPSink")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("gint" "p1")
  )
)

(define-property name
  (of-object "GstMultiUDPSink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preroll-queue-len
  (of-object "GstMultiUDPSink")
  (prop-type "GParamUInt")
  (docs "Number of buffers to queue during preroll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sync
  (of-object "GstMultiUDPSink")
  (prop-type "GParamBoolean")
  (docs "Sync on the clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-lateness
  (of-object "GstMultiUDPSink")
  (prop-type "GParamInt64")
  (docs "Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstMultiUDPSink")
  (prop-type "GParamBoolean")
  (docs "Generate Quality-of-Service events upstream")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async
  (of-object "GstMultiUDPSink")
  (prop-type "GParamBoolean")
  (docs "Go asynchronously to PAUSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ts-offset
  (of-object "GstMultiUDPSink")
  (prop-type "GParamInt64")
  (docs "Timestamp offset in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property last-buffer
  (of-object "GstMultiUDPSink")
  (prop-type "GParamSpecMiniObject")
  (docs "The last buffer received in the sink")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstMultiUDPSink")
  (prop-type "GParamUInt")
  (docs "Size in bytes to pull per buffer (0 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property render-delay
  (of-object "GstMultiUDPSink")
  (prop-type "GParamUInt64")
  (docs "Additional render delay of the sink in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property bytes-to-serve
  (of-object "GstMultiUDPSink")
  (prop-type "GParamUInt64")
  (docs "Number of bytes received to serve to clients")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property bytes-served
  (of-object "GstMultiUDPSink")
  (prop-type "GParamUInt64")
  (docs "Total number of bytes send to all clients")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property sockfd
  (of-object "GstMultiUDPSink")
  (prop-type "GParamInt")
  (docs "Socket to use for UDP sending. (-1 == allocate)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property closefd
  (of-object "GstMultiUDPSink")
  (prop-type "GParamBoolean")
  (docs "Close sockfd if passed as property on state change")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sock
  (of-object "GstMultiUDPSink")
  (prop-type "GParamInt")
  (docs "Socket currently in use for UDP sending. (-1 == no socket)")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property clients
  (of-object "GstMultiUDPSink")
  (prop-type "GParamString")
  (docs "A comma separated list of host:port pairs with destinations")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property auto-multicast
  (of-object "GstMultiUDPSink")
  (prop-type "GParamBoolean")
  (docs "Automatically join/leave the multicast groups, FALSE means user has to do it himself")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ttl
  (of-object "GstMultiUDPSink")
  (prop-type "GParamInt")
  (docs "Used for setting the multicast TTL parameter")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property loop
  (of-object "GstMultiUDPSink")
  (prop-type "GParamBoolean")
  (docs "Used for setting the multicast loop parameter. TRUE = enable, FALSE = disable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos-dscp
  (of-object "GstMultiUDPSink")
  (prop-type "GParamInt")
  (docs "Quality of Service, differentiated services code point (-1 default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstOssMixerElement

(define-property name
  (of-object "GstOssMixerElement")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device
  (of-object "GstOssMixerElement")
  (prop-type "GParamString")
  (docs "OSS mixer device (usually /dev/mixer)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device-name
  (of-object "GstOssMixerElement")
  (prop-type "GParamString")
  (docs "Human-readable name of the sound device")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GstOssSink

(define-property name
  (of-object "GstOssSink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preroll-queue-len
  (of-object "GstOssSink")
  (prop-type "GParamUInt")
  (docs "Number of buffers to queue during preroll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sync
  (of-object "GstOssSink")
  (prop-type "GParamBoolean")
  (docs "Sync on the clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-lateness
  (of-object "GstOssSink")
  (prop-type "GParamInt64")
  (docs "Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstOssSink")
  (prop-type "GParamBoolean")
  (docs "Generate Quality-of-Service events upstream")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async
  (of-object "GstOssSink")
  (prop-type "GParamBoolean")
  (docs "Go asynchronously to PAUSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ts-offset
  (of-object "GstOssSink")
  (prop-type "GParamInt64")
  (docs "Timestamp offset in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property last-buffer
  (of-object "GstOssSink")
  (prop-type "GParamSpecMiniObject")
  (docs "The last buffer received in the sink")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstOssSink")
  (prop-type "GParamUInt")
  (docs "Size in bytes to pull per buffer (0 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property render-delay
  (of-object "GstOssSink")
  (prop-type "GParamUInt64")
  (docs "Additional render delay of the sink in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer-time
  (of-object "GstOssSink")
  (prop-type "GParamInt64")
  (docs "Size of audio buffer in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property latency-time
  (of-object "GstOssSink")
  (prop-type "GParamInt64")
  (docs "Audio latency in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property provide-clock
  (of-object "GstOssSink")
  (prop-type "GParamBoolean")
  (docs "Provide a clock to be used as the global pipeline clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property slave-method
  (of-object "GstOssSink")
  (prop-type "GParamEnum")
  (docs "Algorithm to use to match the rate of the masterclock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device
  (of-object "GstOssSink")
  (prop-type "GParamString")
  (docs "OSS device (usually /dev/dspN)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstOssSrc

(define-property name
  (of-object "GstOssSrc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstOssSrc")
  (prop-type "GParamULong")
  (docs "Size in bytes to read per buffer (-1 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-buffers
  (of-object "GstOssSrc")
  (prop-type "GParamInt")
  (docs "Number of buffers to output before sending EOS (-1 = unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property typefind
  (of-object "GstOssSrc")
  (prop-type "GParamBoolean")
  (docs "Run typefind before negotiating")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-timestamp
  (of-object "GstOssSrc")
  (prop-type "GParamBoolean")
  (docs "Apply current stream time to buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer-time
  (of-object "GstOssSrc")
  (prop-type "GParamInt64")
  (docs "Size of audio buffer in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property latency-time
  (of-object "GstOssSrc")
  (prop-type "GParamInt64")
  (docs "Audio latency in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property actual-buffer-time
  (of-object "GstOssSrc")
  (prop-type "GParamInt64")
  (docs "Actual configured size of audio buffer in microseconds")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property actual-latency-time
  (of-object "GstOssSrc")
  (prop-type "GParamInt64")
  (docs "Actual configured audio latency in microseconds")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property provide-clock
  (of-object "GstOssSrc")
  (prop-type "GParamBoolean")
  (docs "Provide a clock to be used as the global pipeline clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property slave-method
  (of-object "GstOssSrc")
  (prop-type "GParamEnum")
  (docs "Algorithm to use to match the rate of the masterclock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device
  (of-object "GstOssSrc")
  (prop-type "GParamString")
  (docs "OSS device (usually /dev/dspN)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device-name
  (of-object "GstOssSrc")
  (prop-type "GParamString")
  (docs "Human-readable name of the sound device")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GstPngDec

(define-property name
  (of-object "GstPngDec")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstPngEnc

(define-property name
  (of-object "GstPngEnc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property snapshot
  (of-object "GstPngEnc")
  (prop-type "GParamBoolean")
  (docs "Send EOS after encoding a frame, useful for snapshots")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property compression-level
  (of-object "GstPngEnc")
  (prop-type "GParamUInt")
  (docs "PNG compression level")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstProgressReport

(define-property name
  (of-object "GstProgressReport")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstProgressReport")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property update-freq
  (of-object "GstProgressReport")
  (prop-type "GParamInt")
  (docs "Number of seconds between reports when data is flowing")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property silent
  (of-object "GstProgressReport")
  (prop-type "GParamBoolean")
  (docs "Do not print output to stdout")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property format
  (of-object "GstProgressReport")
  (prop-type "GParamString")
  (docs "Format to use for the querying")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstPulseSink

(define-property name
  (of-object "GstPulseSink")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preroll-queue-len
  (of-object "GstPulseSink")
  (prop-type "GParamUInt")
  (docs "Number of buffers to queue during preroll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sync
  (of-object "GstPulseSink")
  (prop-type "GParamBoolean")
  (docs "Sync on the clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-lateness
  (of-object "GstPulseSink")
  (prop-type "GParamInt64")
  (docs "Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstPulseSink")
  (prop-type "GParamBoolean")
  (docs "Generate Quality-of-Service events upstream")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async
  (of-object "GstPulseSink")
  (prop-type "GParamBoolean")
  (docs "Go asynchronously to PAUSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ts-offset
  (of-object "GstPulseSink")
  (prop-type "GParamInt64")
  (docs "Timestamp offset in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property last-buffer
  (of-object "GstPulseSink")
  (prop-type "GParamSpecMiniObject")
  (docs "The last buffer received in the sink")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstPulseSink")
  (prop-type "GParamUInt")
  (docs "Size in bytes to pull per buffer (0 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property render-delay
  (of-object "GstPulseSink")
  (prop-type "GParamUInt64")
  (docs "Additional render delay of the sink in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer-time
  (of-object "GstPulseSink")
  (prop-type "GParamInt64")
  (docs "Size of audio buffer in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property latency-time
  (of-object "GstPulseSink")
  (prop-type "GParamInt64")
  (docs "Audio latency in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property provide-clock
  (of-object "GstPulseSink")
  (prop-type "GParamBoolean")
  (docs "Provide a clock to be used as the global pipeline clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property slave-method
  (of-object "GstPulseSink")
  (prop-type "GParamEnum")
  (docs "Algorithm to use to match the rate of the masterclock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property server
  (of-object "GstPulseSink")
  (prop-type "GParamString")
  (docs "The PulseAudio server to connect to")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device
  (of-object "GstPulseSink")
  (prop-type "GParamString")
  (docs "The PulseAudio sink device to connect to")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device-name
  (of-object "GstPulseSink")
  (prop-type "GParamString")
  (docs "Human-readable name of the sound device")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property volume
  (of-object "GstPulseSink")
  (prop-type "GParamDouble")
  (docs "Volume of this stream")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstPulseSrc

(define-property name
  (of-object "GstPulseSrc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstPulseSrc")
  (prop-type "GParamULong")
  (docs "Size in bytes to read per buffer (-1 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-buffers
  (of-object "GstPulseSrc")
  (prop-type "GParamInt")
  (docs "Number of buffers to output before sending EOS (-1 = unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property typefind
  (of-object "GstPulseSrc")
  (prop-type "GParamBoolean")
  (docs "Run typefind before negotiating")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-timestamp
  (of-object "GstPulseSrc")
  (prop-type "GParamBoolean")
  (docs "Apply current stream time to buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer-time
  (of-object "GstPulseSrc")
  (prop-type "GParamInt64")
  (docs "Size of audio buffer in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property latency-time
  (of-object "GstPulseSrc")
  (prop-type "GParamInt64")
  (docs "Audio latency in microseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property actual-buffer-time
  (of-object "GstPulseSrc")
  (prop-type "GParamInt64")
  (docs "Actual configured size of audio buffer in microseconds")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property actual-latency-time
  (of-object "GstPulseSrc")
  (prop-type "GParamInt64")
  (docs "Actual configured audio latency in microseconds")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property provide-clock
  (of-object "GstPulseSrc")
  (prop-type "GParamBoolean")
  (docs "Provide a clock to be used as the global pipeline clock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property slave-method
  (of-object "GstPulseSrc")
  (prop-type "GParamEnum")
  (docs "Algorithm to use to match the rate of the masterclock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property server
  (of-object "GstPulseSrc")
  (prop-type "GParamString")
  (docs "The PulseAudio server to connect to")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device
  (of-object "GstPulseSrc")
  (prop-type "GParamString")
  (docs "The PulseAudio source device to connect to")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device-name
  (of-object "GstPulseSrc")
  (prop-type "GParamString")
  (docs "Human-readable name of the sound device")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GstPulseMixer

(define-property name
  (of-object "GstPulseMixer")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property server
  (of-object "GstPulseMixer")
  (prop-type "GParamString")
  (docs "The PulseAudio server to connect to")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device
  (of-object "GstPulseMixer")
  (prop-type "GParamString")
  (docs "The PulseAudio sink or source to control")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device-name
  (of-object "GstPulseMixer")
  (prop-type "GParamString")
  (docs "Human-readable name of the sound device")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GstQTDemux

(define-property name
  (of-object "GstQTDemux")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstRgAnalysis

(define-property name
  (of-object "GstRgAnalysis")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstRgAnalysis")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-tracks
  (of-object "GstRgAnalysis")
  (prop-type "GParamInt")
  (docs "Number of remaining album tracks")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property forced
  (of-object "GstRgAnalysis")
  (prop-type "GParamBoolean")
  (docs "Analyze even if ReplayGain tags exist")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property reference-level
  (of-object "GstRgAnalysis")
  (prop-type "GParamDouble")
  (docs "Reference level [dB]")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstRgLimiter

(define-property name
  (of-object "GstRgLimiter")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstRgLimiter")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enabled
  (of-object "GstRgLimiter")
  (prop-type "GParamBoolean")
  (docs "Enable processing")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstRgVolume

(define-property name
  (of-object "GstRgVolume")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async-handling
  (of-object "GstRgVolume")
  (prop-type "GParamBoolean")
  (docs "The bin will handle Asynchronous state changes")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property album-mode
  (of-object "GstRgVolume")
  (prop-type "GParamBoolean")
  (docs "Prefer album over track gain")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property headroom
  (of-object "GstRgVolume")
  (prop-type "GParamDouble")
  (docs "Extra headroom [dB]")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pre-amp
  (of-object "GstRgVolume")
  (prop-type "GParamDouble")
  (docs "Extra gain [dB]")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fallback-gain
  (of-object "GstRgVolume")
  (prop-type "GParamDouble")
  (docs "Gain for streams missing tags [dB]")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property target-gain
  (of-object "GstRgVolume")
  (prop-type "GParamDouble")
  (docs "Applicable gain [dB]")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property result-gain
  (of-object "GstRgVolume")
  (prop-type "GParamDouble")
  (docs "Applied gain [dB]")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GstRTPDec

(define-signal request-pt-map
  (of-object "GstRTPDec")
  (return-type "GstCaps*")
  (when "last")
  (parameters
    '("guint" "p0")
    '("guint" "p1")
  )
)

(define-signal clear-pt-map
  (of-object "GstRTPDec")
  (return-type "void")
  (when "last")
)

(define-signal on-new-ssrc
  (of-object "GstRTPDec")
  (return-type "void")
  (when "last")
  (parameters
    '("guint" "p0")
    '("guint" "p1")
  )
)

(define-signal on-ssrc-collision
  (of-object "GstRTPDec")
  (return-type "void")
  (when "last")
  (parameters
    '("guint" "p0")
    '("guint" "p1")
  )
)

(define-signal on-ssrc-validated
  (of-object "GstRTPDec")
  (return-type "void")
  (when "last")
  (parameters
    '("guint" "p0")
    '("guint" "p1")
  )
)

(define-signal on-bye-ssrc
  (of-object "GstRTPDec")
  (return-type "void")
  (when "last")
  (parameters
    '("guint" "p0")
    '("guint" "p1")
  )
)

(define-signal on-bye-timeout
  (of-object "GstRTPDec")
  (return-type "void")
  (when "last")
  (parameters
    '("guint" "p0")
    '("guint" "p1")
  )
)

(define-signal on-timeout
  (of-object "GstRTPDec")
  (return-type "void")
  (when "last")
  (parameters
    '("guint" "p0")
    '("guint" "p1")
  )
)

(define-property name
  (of-object "GstRTPDec")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property latency
  (of-object "GstRTPDec")
  (prop-type "GParamUInt")
  (docs "Amount of ms to buffer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstRTSPSrc

(define-property name
  (of-object "GstRTSPSrc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property async-handling
  (of-object "GstRTSPSrc")
  (prop-type "GParamBoolean")
  (docs "The bin will handle Asynchronous state changes")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property location
  (of-object "GstRTSPSrc")
  (prop-type "GParamString")
  (docs "Location of the RTSP url to read")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property protocols
  (of-object "GstRTSPSrc")
  (prop-type "GParamFlags")
  (docs "Allowed lower transport protocols")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property debug
  (of-object "GstRTSPSrc")
  (prop-type "GParamBoolean")
  (docs "Dump request and response messages to stdout")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property retry
  (of-object "GstRTSPSrc")
  (prop-type "GParamUInt")
  (docs "Max number of retries when allocating RTP ports.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property timeout
  (of-object "GstRTSPSrc")
  (prop-type "GParamUInt64")
  (docs "Retry TCP transport after UDP timeout microseconds (0 = disabled)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tcp-timeout
  (of-object "GstRTSPSrc")
  (prop-type "GParamUInt64")
  (docs "Fail after timeout microseconds on TCP connections (0 = disabled)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property latency
  (of-object "GstRTSPSrc")
  (prop-type "GParamUInt")
  (docs "Amount of ms to buffer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property connection-speed
  (of-object "GstRTSPSrc")
  (prop-type "GParamUInt")
  (docs "Network connection speed in kbps (0 = unknown)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property nat-method
  (of-object "GstRTSPSrc")
  (prop-type "GParamEnum")
  (docs "Method to use for traversing firewalls and NAT")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-rtcp
  (of-object "GstRTSPSrc")
  (prop-type "GParamBoolean")
  (docs "Send RTCP packets, disable for old incompatible server.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property proxy
  (of-object "GstRTSPSrc")
  (prop-type "GParamString")
  (docs "Proxy settings for HTTP tunneling. Format: [user:passwd@]host[:port]")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstSmokeDec

(define-property name
  (of-object "GstSmokeDec")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstSmokeEnc

(define-property name
  (of-object "GstSmokeEnc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qmin
  (of-object "GstSmokeEnc")
  (prop-type "GParamInt")
  (docs "Minimum quality")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qmax
  (of-object "GstSmokeEnc")
  (prop-type "GParamInt")
  (docs "Maximum quality")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property threshold
  (of-object "GstSmokeEnc")
  (prop-type "GParamInt")
  (docs "Motion estimation threshold")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property keyframe
  (of-object "GstSmokeEnc")
  (prop-type "GParamInt")
  (docs "Insert keyframe every N frames")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstSMPTE

(define-property name
  (of-object "GstSMPTE")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property type
  (of-object "GstSMPTE")
  (prop-type "GParamEnum")
  (docs "The type of transition to use")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border
  (of-object "GstSMPTE")
  (prop-type "GParamInt")
  (docs "The border width of the transition")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property depth
  (of-object "GstSMPTE")
  (prop-type "GParamInt")
  (docs "Depth of the mask in bits")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fps
  (of-object "GstSMPTE")
  (prop-type "GParamFloat")
  (docs "Frames per second if no input files are given (deprecated)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property duration
  (of-object "GstSMPTE")
  (prop-type "GParamUInt64")
  (docs "Duration of the transition effect in nanoseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstSMPTEAlpha

(define-property name
  (of-object "GstSMPTEAlpha")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstSMPTEAlpha")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property type
  (of-object "GstSMPTEAlpha")
  (prop-type "GParamEnum")
  (docs "The type of transition to use")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border
  (of-object "GstSMPTEAlpha")
  (prop-type "GParamInt")
  (docs "The border width of the transition")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property depth
  (of-object "GstSMPTEAlpha")
  (prop-type "GParamInt")
  (docs "Depth of the mask in bits")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property position
  (of-object "GstSMPTEAlpha")
  (prop-type "GParamDouble")
  (docs "Position of the transition effect")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstSoupHTTPSrc

(define-property name
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamULong")
  (docs "Size in bytes to read per buffer (-1 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-buffers
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamInt")
  (docs "Number of buffers to output before sending EOS (-1 = unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property typefind
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamBoolean")
  (docs "Run typefind before negotiating")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-timestamp
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamBoolean")
  (docs "Apply current stream time to buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property location
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "Location to read from")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-live
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamBoolean")
  (docs "Act like a live source")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property user-agent
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "Value of the User-Agent HTTP request header field")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property automatic-redirect
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamBoolean")
  (docs "Automatically follow HTTP redirects (HTTP Status Code 3xx)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property proxy
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "HTTP proxy server URI")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property user-id
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "HTTP location URI user id for authentication")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property user-pw
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "HTTP location URI user password for authentication")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property proxy-id
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "HTTP proxy URI user id for authentication")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property proxy-pw
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "HTTP proxy URI user password for authentication")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cookies
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamBoxed")
  (docs "HTTP request cookies")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property iradio-mode
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamBoolean")
  (docs "Enable internet radio mode (extraction of shoutcast/icecast metadata)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property iradio-name
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "Name of the stream")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property iradio-genre
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "Genre of the stream")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property iradio-url
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "Homepage URL for radio stream")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property iradio-title
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamString")
  (docs "Name of currently playing song")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property timeout
  (of-object "GstSoupHTTPSrc")
  (prop-type "GParamUInt")
  (docs "Value in seconds to timeout a blocking I/O (0 = No timeout).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstSpectrum

(define-property name
  (of-object "GstSpectrum")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstSpectrum")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property message
  (of-object "GstSpectrum")
  (prop-type "GParamBoolean")
  (docs "Whether to post a 'spectrum' element message on the bus for each passed interval")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property message-magnitude
  (of-object "GstSpectrum")
  (prop-type "GParamBoolean")
  (docs "Whether to add a 'magnitude' field to the structure of any 'spectrum' element messages posted on the bus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property message-phase
  (of-object "GstSpectrum")
  (prop-type "GParamBoolean")
  (docs "Whether to add a 'phase' field to the structure of any 'spectrum' element messages posted on the bus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property interval
  (of-object "GstSpectrum")
  (prop-type "GParamUInt64")
  (docs "Interval of time between message posts (in nanoseconds)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property bands
  (of-object "GstSpectrum")
  (prop-type "GParamUInt")
  (docs "Number of frequency bands")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property threshold
  (of-object "GstSpectrum")
  (prop-type "GParamInt")
  (docs "dB threshold for result. All lower values will be set to this")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstTagInject

(define-property name
  (of-object "GstTagInject")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstTagInject")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tags
  (of-object "GstTagInject")
  (prop-type "GParamString")
  (docs "List of tags to inject into the target file")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

;; From GstUDPSrc

(define-property name
  (of-object "GstUDPSrc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstUDPSrc")
  (prop-type "GParamULong")
  (docs "Size in bytes to read per buffer (-1 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-buffers
  (of-object "GstUDPSrc")
  (prop-type "GParamInt")
  (docs "Number of buffers to output before sending EOS (-1 = unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property typefind
  (of-object "GstUDPSrc")
  (prop-type "GParamBoolean")
  (docs "Run typefind before negotiating")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-timestamp
  (of-object "GstUDPSrc")
  (prop-type "GParamBoolean")
  (docs "Apply current stream time to buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property port
  (of-object "GstUDPSrc")
  (prop-type "GParamInt")
  (docs "The port to receive the packets from, 0=allocate")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property multicast-group
  (of-object "GstUDPSrc")
  (prop-type "GParamString")
  (docs "The Address of multicast group to join")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property multicast-iface
  (of-object "GstUDPSrc")
  (prop-type "GParamString")
  (docs "The network interface on which to join the multicast group")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property uri
  (of-object "GstUDPSrc")
  (prop-type "GParamString")
  (docs "URI in the form of udp://multicast_group:port")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property caps
  (of-object "GstUDPSrc")
  (prop-type "GParamBoxed")
  (docs "The caps of the source pad")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sockfd
  (of-object "GstUDPSrc")
  (prop-type "GParamInt")
  (docs "Socket to use for UDP reception. (-1 == allocate)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer-size
  (of-object "GstUDPSrc")
  (prop-type "GParamInt")
  (docs "Size of the kernel receive buffer in bytes, 0=default")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property timeout
  (of-object "GstUDPSrc")
  (prop-type "GParamUInt64")
  (docs "Post a message after timeout microseconds (0 = disabled)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property skip-first-bytes
  (of-object "GstUDPSrc")
  (prop-type "GParamInt")
  (docs "number of bytes to skip for each udp packet")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property closefd
  (of-object "GstUDPSrc")
  (prop-type "GParamBoolean")
  (docs "Close sockfd if passed as property on state change")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sock
  (of-object "GstUDPSrc")
  (prop-type "GParamInt")
  (docs "Socket currently in use for UDP reception. (-1 = no socket)")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property auto-multicast
  (of-object "GstUDPSrc")
  (prop-type "GParamBoolean")
  (docs "Automatically join/leave multicast groups")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstV4l2Src

(define-property name
  (of-object "GstV4l2Src")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstV4l2Src")
  (prop-type "GParamULong")
  (docs "Size in bytes to read per buffer (-1 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-buffers
  (of-object "GstV4l2Src")
  (prop-type "GParamInt")
  (docs "Number of buffers to output before sending EOS (-1 = unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property typefind
  (of-object "GstV4l2Src")
  (prop-type "GParamBoolean")
  (docs "Run typefind before negotiating")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-timestamp
  (of-object "GstV4l2Src")
  (prop-type "GParamBoolean")
  (docs "Apply current stream time to buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device
  (of-object "GstV4l2Src")
  (prop-type "GParamString")
  (docs "Device location")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property device-name
  (of-object "GstV4l2Src")
  (prop-type "GParamString")
  (docs "Name of the device")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property device-fd
  (of-object "GstV4l2Src")
  (prop-type "GParamInt")
  (docs "File descriptor of the device")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property flags
  (of-object "GstV4l2Src")
  (prop-type "GParamFlags")
  (docs "Device type flags")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property queue-size
  (of-object "GstV4l2Src")
  (prop-type "GParamUInt")
  (docs "Number of buffers to be enqueud in the driver")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property always-copy
  (of-object "GstV4l2Src")
  (prop-type "GParamBoolean")
  (docs "If the buffer will or not be used directly from mmap")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstVideoBalance

(define-property name
  (of-object "GstVideoBalance")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstVideoBalance")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property contrast
  (of-object "GstVideoBalance")
  (prop-type "GParamDouble")
  (docs "contrast")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property brightness
  (of-object "GstVideoBalance")
  (prop-type "GParamDouble")
  (docs "brightness")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hue
  (of-object "GstVideoBalance")
  (prop-type "GParamDouble")
  (docs "hue")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property saturation
  (of-object "GstVideoBalance")
  (prop-type "GParamDouble")
  (docs "saturation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstVideoCrop

(define-property name
  (of-object "GstVideoCrop")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstVideoCrop")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left
  (of-object "GstVideoCrop")
  (prop-type "GParamInt")
  (docs "Pixels to crop at left")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right
  (of-object "GstVideoCrop")
  (prop-type "GParamInt")
  (docs "Pixels to crop at right")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property top
  (of-object "GstVideoCrop")
  (prop-type "GParamInt")
  (docs "Pixels to crop at top")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property bottom
  (of-object "GstVideoCrop")
  (prop-type "GParamInt")
  (docs "Pixels to crop at bottom")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstVideoFlip

(define-property name
  (of-object "GstVideoFlip")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property qos
  (of-object "GstVideoFlip")
  (prop-type "GParamBoolean")
  (docs "Handle Quality-of-Service events")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property method
  (of-object "GstVideoFlip")
  (prop-type "GParamEnum")
  (docs "method")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstVideoMixer

(define-property name
  (of-object "GstVideoMixer")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background
  (of-object "GstVideoMixer")
  (prop-type "GParamEnum")
  (docs "Background type")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstWavpackDec

(define-property name
  (of-object "GstWavpackDec")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstWavpackEnc

(define-property name
  (of-object "GstWavpackEnc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mode
  (of-object "GstWavpackEnc")
  (prop-type "GParamEnum")
  (docs "Speed versus compression tradeoff.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property bitrate
  (of-object "GstWavpackEnc")
  (prop-type "GParamUInt")
  (docs "Try to encode with this average bitrate (bits/sec). This enables lossy encoding, values smaller than 24000 disable it again.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property bits-per-sample
  (of-object "GstWavpackEnc")
  (prop-type "GParamDouble")
  (docs "Try to encode with this amount of bits per sample. This enables lossy encoding, values smaller than 2.0 disable it again.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property correction-mode
  (of-object "GstWavpackEnc")
  (prop-type "GParamEnum")
  (docs "Use this mode for the correction stream. Only works in lossy mode!")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property md5
  (of-object "GstWavpackEnc")
  (prop-type "GParamBoolean")
  (docs "Store MD5 hash of raw samples within the file.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extra-processing
  (of-object "GstWavpackEnc")
  (prop-type "GParamUInt")
  (docs "Use better but slower filters for better compression/quality.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property joint-stereo-mode
  (of-object "GstWavpackEnc")
  (prop-type "GParamEnum")
  (docs "Use this joint-stereo mode.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstWavpackParse

(define-property name
  (of-object "GstWavpackParse")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstWavParse

(define-property name
  (of-object "GstWavParse")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GstXImageSrc

(define-property name
  (of-object "GstXImageSrc")
  (prop-type "GParamString")
  (docs "The name of the object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property blocksize
  (of-object "GstXImageSrc")
  (prop-type "GParamULong")
  (docs "Size in bytes to read per buffer (-1 = default)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property num-buffers
  (of-object "GstXImageSrc")
  (prop-type "GParamInt")
  (docs "Number of buffers to output before sending EOS (-1 = unlimited)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property typefind
  (of-object "GstXImageSrc")
  (prop-type "GParamBoolean")
  (docs "Run typefind before negotiating")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-timestamp
  (of-object "GstXImageSrc")
  (prop-type "GParamBoolean")
  (docs "Apply current stream time to buffers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property display-name
  (of-object "GstXImageSrc")
  (prop-type "GParamString")
  (docs "X Display Name")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property screen-num
  (of-object "GstXImageSrc")
  (prop-type "GParamUInt")
  (docs "X Screen Number")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-pointer
  (of-object "GstXImageSrc")
  (prop-type "GParamBoolean")
  (docs "Show mouse pointer (if XFixes extension enabled)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-damage
  (of-object "GstXImageSrc")
  (prop-type "GParamBoolean")
  (docs "Use XDamage (if XDamage extension enabled)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property startx
  (of-object "GstXImageSrc")
  (prop-type "GParamUInt")
  (docs "X coordinate of top left corner of area to be recorded (0 for top left of screen)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property starty
  (of-object "GstXImageSrc")
  (prop-type "GParamUInt")
  (docs "Y coordinate of top left corner of area to be recorded (0 for top left of screen)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property endx
  (of-object "GstXImageSrc")
  (prop-type "GParamUInt")
  (docs "X coordinate of bottom right corner of area to be recorded (0 for bottom right of screen)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property endy
  (of-object "GstXImageSrc")
  (prop-type "GParamUInt")
  (docs "Y coordinate of bottom right corner of area to be recorded (0 for bottom right of screen)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

