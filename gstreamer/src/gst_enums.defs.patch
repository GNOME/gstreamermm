--- gst_enums.defs	2009-02-24 19:19:52.000000000 -0500
+++ gst_enums.defs.new	2009-02-24 19:18:20.000000000 -0500
@@ -1,3 +1,5 @@
+;; Apply gst_enums.defs.patch after regenerating.
+
 ;; From /usr/src/jhbuild-sources/gstreamer/gst/gstbin.h
 
 (define-enum-extended BinFlags
@@ -13,7 +15,13 @@
   (in-module "Gst")
   (c-name "GstBufferFlag")
   (values
-    '("y" "GST_BUFFER_FLAG_READONLY" "#error")
+    '("readonly" "GST_BUFFER_FLAG_READONLY" "GST_MINI_OBJECT_FLAG_READONLY")
+    '("preroll" "GST_BUFFER_FLAG_PREROLL" "GST_MINI_OBJECT_FLAG_READONLY << 0")
+    '("discont" "GST_BUFFER_FLAG_DISCONT" "GST_MINI_OBJECT_FLAG_READONLY << 1")
+    '("in-caps" "GST_BUFFER_FLAG_IN_CAPS" "GST_MINI_OBJECT_FLAG_READONLY << 2")
+    '("gap" "GST_BUFFER_FLAG_GAP" "GST_MINI_OBJECT_FLAG_READONLY << 3")
+    '("delta-unit" "GST_BUFFER_FLAG_DELTA_UNIT" "GST_MINI_OBJECT_FLAG_READONLY << 4")
+    '("last" "GST_BUFFER_FLAG_LAST" "GST_MINI_OBJECT_FLAG_READONLY << 8")
   )
 )
 
@@ -33,6 +41,8 @@
   (in-module "Gst")
   (c-name "GstBusFlags")
   (values
+    '("flushing" "GST_BUS_FLUSHING" "GST_OBJECT_FLAG_LAST << 0")
+    '("last" "GST_BUS_FLAG_LAST" "GST_OBJECT_FLAG_LAST << 1")
   )
 )
 
@@ -85,6 +95,13 @@
   (in-module "Gst")
   (c-name "GstClockFlags")
   (values
+    '("can-do-single-sync" "GST_CLOCK_FLAG_CAN_DO_SINGLE_SYNC" "GST_OBJECT_FLAG_LAST << 0")
+    '("can-do-single-async" "GST_CLOCK_FLAG_CAN_DO_SINGLE_ASYNC" "GST_OBJECT_FLAG_LAST << 1")
+    '("can-do-periodic-sync" "GST_CLOCK_FLAG_CAN_DO_PERIODIC_SYNC" "GST_OBJECT_FLAG_LAST << 2")
+    '("can-do-periodic-async" "GST_CLOCK_FLAG_CAN_DO_PERIODIC_ASYNC" "GST_OBJECT_FLAG_LAST << 3")
+    '("can-set-resolution" "GST_CLOCK_FLAG_CAN_SET_RESOLUTION" "GST_OBJECT_FLAG_LAST << 4")
+    '("can-set-master" "GST_CLOCK_FLAG_CAN_SET_MASTER" "GST_OBJECT_FLAG_LAST << 5")
+    '("last" "GST_CLOCK_FLAG_LAST" "GST_OBJECT_FLAG_LAST << 8")
   )
 )
 
@@ -126,10 +143,18 @@
   )
 )
 
+;; TODO: See why gmmproc reports errors when values of following enum are
+;; commented in.
 (define-enum-extended StateChange
   (in-module "Gst")
   (c-name "GstStateChange")
   (values
+;;    '("null-to-ready" "GST_STATE_CHANGE_NULL_TO_READY" "(GST_STATE_NULL<<3) | GST_STATE_READY")
+;;    '("ready-to-paused" "GST_STATE_CHANGE_READY_TO_PAUSED" "(GST_STATE_READY<<3) | GST_STATE_PAUSED")
+;;    '("paused-to-playing" "GST_STATE_CHANGE_PAUSED_TO_PLAYING" "(GST_STATE_PAUSED<<3) | GST_STATE_PLAYING")
+;;    '("playing-to-paused" "GST_STATE_CHANGE_PLAYING_TO_PAUSED" "(GST_STATE_PLAYING<<3) | GST_STATE_PAUSED")
+;;    '("paused-to-ready" "GST_STATE_CHANGE_PAUSED_TO_READY" "(GST_STATE_PAUSED<<3) | GST_STATE_READY")
+;;    '("ready-to-null" "GST_STATE_CHANGE_READY_TO_NULL" "(GST_STATE_READY<<3) | GST_STATE_NULL")
   )
 )
 
@@ -137,6 +162,10 @@
   (in-module "Gst")
   (c-name "GstElementFlags")
   (values
+    '("locked-state" "GST_ELEMENT_LOCKED_STATE" "GST_OBJECT_FLAG_LAST << 0")
+    '("is-sink" "GST_ELEMENT_IS_SINK" "GST_OBJECT_FLAG_LAST << 1")
+    '("unparenting" "GST_ELEMENT_UNPARENTING" "GST_OBJECT_FLAG_LAST << 2")
+    '("flag-set" "GST_ELEMENT_FLAG_LAST" "GST_OBJECT_FLAG_LAST << 16")
   )
 )
 
@@ -233,38 +262,6 @@
   )
 )
 
-(define-enum-extended EventType
-  (in-module "Gst")
-  (c-name "GstEventType")
-  (values
-    '("gst-event-unknown" "GST_EVENT_UNKNOWN" "#error")
-    '("0)" "0)" "1")
-    '("gst-event-flush-start" "GST_EVENT_FLUSH_START" "2")
-    '("flag(both))" "FLAG(BOTH))" "3")
-    '("gst-event-flush-stop" "GST_EVENT_FLUSH_STOP" "4")
-    '("gst-event-eos" "GST_EVENT_EOS" "6")
-    '("gst-event-newsegment" "GST_EVENT_NEWSEGMENT" "8")
-    '("gst-event-tag" "GST_EVENT_TAG" "10")
-    '("gst-event-buffersize" "GST_EVENT_BUFFERSIZE" "12")
-    '("gst-event-qos" "GST_EVENT_QOS" "14")
-    '("flag(upstream))" "FLAG(UPSTREAM))" "15")
-    '("gst-event-seek" "GST_EVENT_SEEK" "16")
-    '("flag(upstream))" "FLAG(UPSTREAM))" "17")
-    '("gst-event-navigation" "GST_EVENT_NAVIGATION" "18")
-    '("flag(upstream))" "FLAG(UPSTREAM))" "19")
-    '("gst-event-latency" "GST_EVENT_LATENCY" "20")
-    '("flag(upstream))" "FLAG(UPSTREAM))" "21")
-    '("gst-event-custom-upstream" "GST_EVENT_CUSTOM_UPSTREAM" "22")
-    '("flag(upstream))" "FLAG(UPSTREAM))" "23")
-    '("gst-event-custom-downstream" "GST_EVENT_CUSTOM_DOWNSTREAM" "24")
-    '("gst-event-custom-downstream-oob" "GST_EVENT_CUSTOM_DOWNSTREAM_OOB" "26")
-    '("flag(downstream))" "FLAG(DOWNSTREAM))" "27")
-    '("gst-event-custom-both" "GST_EVENT_CUSTOM_BOTH" "28")
-    '("gst-event-custom-both-oob" "GST_EVENT_CUSTOM_BOTH_OOB" "30")
-    '("flag(both))" "FLAG(BOTH))" "31")
-  )
-)
-
 (define-enum-extended SeekType
   (in-module "Gst")
   (c-name "GstSeekType")
@@ -362,6 +359,9 @@
   (in-module "Gst")
   (c-name "GstIndexFlags")
   (values
+    '("writable" "GST_INDEX_WRITABLE" "GST_OBJECT_FLAG_LAST << 0")
+    '("readable" "GST_INDEX_READABLE" "GST_OBJECT_FLAG_LAST << 1")
+    '("last" "GST_INDEX_FLAG_LAST" "GST_OBJECT_FLAG_LAST << 8")
   )
 )
 
@@ -459,7 +459,7 @@
     '("async-start" "GST_MESSAGE_ASYNC_START" "1 << 20")
     '("async-done" "GST_MESSAGE_ASYNC_DONE" "1 << 21")
     '("request-state" "GST_MESSAGE_REQUEST_STATE" "1 << 22")
-    '("any" "GST_MESSAGE_ANY" "0xFFFFFFFFFFFFFFFF")
+    '("any" "GST_MESSAGE_ANY" "~0")
   )
 )
 
@@ -552,6 +552,12 @@
   (in-module "Gst")
   (c-name "GstPadFlags")
   (values
+    '("blocked" "GST_PAD_BLOCKED" "GST_OBJECT_FLAG_LAST << 0")
+    '("flushing" "GST_PAD_FLUSHING" "GST_OBJECT_FLAG_LAST << 1")
+    '("in-getcaps" "GST_PAD_IN_GETCAPS" "GST_OBJECT_FLAG_LAST << 2")
+    '("in_setcaps" "GST_PAD_IN_SETCAPS" "GST_OBJECT_FLAG_LAST << 3")
+    '("blocking" "GST_PAD_BLOCKING" "GST_OBJECT_FLAG_LAST << 4")
+    '("last" "GST_PAD_FLAG_LAST" "GST_OBJECT_FLAG_LAST << 8")
   )
 )
 
@@ -571,6 +577,8 @@
   (in-module "Gst")
   (c-name "GstPadTemplateFlags")
   (values
+    '("fixed" "GST_PAD_TEMPLATE_FIXED" "GST_OBJECT_FLAG_LAST << 0")
+    '("last" "GST_PAD_TEMPLATE_LAST" "GST_OBJECT_FLAG_LAST << 4")
   )
 )
 
@@ -912,13 +920,13 @@
   (in-module "Gst")
   (c-name "GstFakeSinkStateError")
   (values
-    '("none" "FAKE_SINK_STATE_ERROR_NONE" "0")
-    '("null-ready" "FAKE_SINK_STATE_ERROR_NULL_READY" "1")
-    '("ready-paused" "FAKE_SINK_STATE_ERROR_READY_PAUSED" "2")
-    '("paused-playing" "FAKE_SINK_STATE_ERROR_PAUSED_PLAYING" "3")
-    '("playing-paused" "FAKE_SINK_STATE_ERROR_PLAYING_PAUSED" "4")
-    '("paused-ready" "FAKE_SINK_STATE_ERROR_PAUSED_READY" "5")
-    '("ready-null" "FAKE_SINK_STATE_ERROR_READY_NULL" "6")
+    '("none" "GST_FAKE_SINK_STATE_ERROR_NONE" "0")
+    '("null-ready" "GST_FAKE_SINK_STATE_ERROR_NULL_READY" "1")
+    '("ready-paused" "GST_FAKE_SINK_STATE_ERROR_READY_PAUSED" "2")
+    '("paused-playing" "GST_FAKE_SINK_STATE_ERROR_PAUSED_PLAYING" "3")
+    '("playing-paused" "GST_FAKE_SINK_STATE_ERROR_PLAYING_PAUSED" "4")
+    '("paused-ready" "GST_FAKE_SINK_STATE_ERROR_PAUSED_READY" "5")
+    '("ready-null" "GST_FAKE_SINK_STATE_ERROR_READY_NULL" "6")
   )
 )
 
@@ -928,14 +936,14 @@
   (in-module "Gst")
   (c-name "GstFakeSrcOutputType")
   (values
-    '("first-last-loop" "FAKE_SRC_FIRST_LAST_LOOP" "1")
-    '("last-first-loop" "FAKE_SRC_LAST_FIRST_LOOP" "2")
-    '("ping-pong" "FAKE_SRC_PING_PONG" "3")
-    '("ordered-random" "FAKE_SRC_ORDERED_RANDOM" "4")
-    '("random" "FAKE_SRC_RANDOM" "5")
-    '("pattern-loop" "FAKE_SRC_PATTERN_LOOP" "6")
-    '("ping-pong-pattern" "FAKE_SRC_PING_PONG_PATTERN" "7")
-    '("get-always-suceeds" "FAKE_SRC_GET_ALWAYS_SUCEEDS" "8")
+    '("first-last-loop" "GST_FAKE_SRC_FIRST_LAST_LOOP" "1")
+    '("last-first-loop" "GST_FAKE_SRC_LAST_FIRST_LOOP" "2")
+    '("ping-pong" "GST_FAKE_SRC_PING_PONG" "3")
+    '("ordered-random" "GST_FAKE_SRC_ORDERED_RANDOM" "4")
+    '("random" "GST_FAKE_SRC_RANDOM" "5")
+    '("pattern-loop" "GST_FAKE_SRC_PATTERN_LOOP" "6")
+    '("ping-pong-pattern" "GST_FAKE_SRC_PING_PONG_PATTERN" "7")
+    '("get-always-suceeds" "GST_FAKE_SRC_GET_ALWAYS_SUCEEDS" "8")
   )
 )
 
@@ -943,8 +951,8 @@
   (in-module "Gst")
   (c-name "GstFakeSrcDataType")
   (values
-    '("allocate" "FAKE_SRC_DATA_ALLOCATE" "1")
-    '("subbuffer" "FAKE_SRC_DATA_SUBBUFFER" "2")
+    '("allocate" "GST_FAKE_SRC_DATA_ALLOCATE" "1")
+    '("subbuffer" "GST_FAKE_SRC_DATA_SUBBUFFER" "2")
   )
 )
 
@@ -952,9 +960,9 @@
   (in-module "Gst")
   (c-name "GstFakeSrcSizeType")
   (values
-    '("empty" "FAKE_SRC_SIZETYPE_EMPTY" "1")
-    '("fixed" "FAKE_SRC_SIZETYPE_FIXED" "2")
-    '("random" "FAKE_SRC_SIZETYPE_RANDOM" "3")
+    '("empty" "GST_FAKE_SRC_SIZETYPE_EMPTY" "1")
+    '("fixed" "GST_FAKE_SRC_SIZETYPE_FIXED" "2")
+    '("random" "GST_FAKE_SRC_SIZETYPE_RANDOM" "3")
   )
 )
 
@@ -962,11 +970,11 @@
   (in-module "Gst")
   (c-name "GstFakeSrcFillType")
   (values
-    '("nothing" "FAKE_SRC_FILLTYPE_NOTHING" "1")
-    '("zero" "FAKE_SRC_FILLTYPE_ZERO" "2")
-    '("random" "FAKE_SRC_FILLTYPE_RANDOM" "3")
-    '("pattern" "FAKE_SRC_FILLTYPE_PATTERN" "4")
-    '("pattern-cont" "FAKE_SRC_FILLTYPE_PATTERN_CONT" "5")
+    '("nothing" "GST_FAKE_SRC_FILLTYPE_NOTHING" "1")
+    '("zero" "GST_FAKE_SRC_FILLTYPE_ZERO" "2")
+    '("random" "GST_FAKE_SRC_FILLTYPE_RANDOM" "3")
+    '("pattern" "GST_FAKE_SRC_FILLTYPE_PATTERN" "4")
+    '("pattern-cont" "GST_FAKE_SRC_FILLTYPE_PATTERN_CONT" "5")
   )
 )
 
@@ -981,6 +989,26 @@
   )
 )
 
+(define-enum-extended FileSinkBufferMode
+  (in-module "Gst")
+  (c-name "GstFileSinkBufferMode")
+  (values
+    '("default" "GST_FILE_SINK_BUFFER_MODE_DEFAULT" "-1")
+    '("full" "GST_FILE_SINK_BUFFER_MODE_FULL" "0")
+    '("line" "GST_FILE_SINK_BUFFER_MODE_LINE" "1")
+    '("unbuffered" "GST_FILE_SINK_BUFFER_MODE_UNBUFFERED" "2")
+  )
+)
+
+(define-enum-extended QueueLeaky
+  (in-module "Gst")
+  (c-name "GstQueueLeaky")
+  (values
+    '("no" "GST_QUEUE_LEAKY_NONE" "0")
+    '("upstream" "GST_QUEUE_LEAKY_UPSTREAM" "1")
+    '("downstream" "GST_QUEUE_LEAKY_DOWNSTREAM" "2")
+  )
+)
 ;; From /usr/src/jhbuild-sources/gst-plugins-base/gst-libs/gst/audio/gstbaseaudiosink.h
 
 (define-enum-extended BaseAudioSinkSlaveMethod
@@ -1695,10 +1723,10 @@
   (in-module "Gst")
   (c-name "GstAudioConvertDithering")
   (values
-    '("none" "DITHER_NONE" "0")
-    '("rpdf" "DITHER_RPDF" "1")
-    '("tpdf" "DITHER_TPDF" "2")
-    '("tpdf-hf" "DITHER_TPDF_HF" "3")
+    '("none" "GST_AUDIO_CONVERT_DITHER_NONE" "0")
+    '("rpdf" "GST_AUDIO_CONVERT_DITHER_RPDF" "1")
+    '("tpdf" "GST_AUDIO_CONVERT_DITHER_TPDF" "2")
+    '("tpdf-hf" "GST_AUDIO_CONVERT_DITHER_TPDF_HF" "3")
   )
 )
 
@@ -1706,11 +1734,11 @@
   (in-module "Gst")
   (c-name "GstAudioConvertNoiseShaping")
   (values
-    '("none" "NOISE_SHAPING_NONE" "0")
-    '("error-feedback" "NOISE_SHAPING_ERROR_FEEDBACK" "1")
-    '("simple" "NOISE_SHAPING_SIMPLE" "2")
-    '("medium" "NOISE_SHAPING_MEDIUM" "3")
-    '("high" "NOISE_SHAPING_HIGH" "4")
+    '("none" "GST_AUDIO_CONVERT_NOISE_SHAPING_NONE" "0")
+    '("error-feedback" "GST_AUDIO_CONVERT_NOISE_SHAPING_ERROR_FEEDBACK" "1")
+    '("simple" "GST_AUDIO_CONVERT_NOISE_SHAPING_SIMPLE" "2")
+    '("medium" "GST_AUDIO_CONVERT_NOISE_SHAPING_MEDIUM" "3")
+    '("high" "GST_AUDIO_CONVERT_NOISE_SHAPING_HIGH" "4")
   )
 )
 
@@ -1757,6 +1785,17 @@
     '("event" "GST_GDP_DEPAY_STATE_EVENT" "4")
   )
 )
+;; Handwritten for GstGDPPay plugin (values taken from output of
+;; `gst-inspect gdppay' -- "version" property information)
+
+(define-enum-extended DPVersion
+  (in-module "Gst")
+  (c-name "GstDPVersion")
+  (values
+    '("0.2" "GST_GDP_VERSION_0_2" "1")
+    '("1.0" "GST_GDP_VERSION_1_0" "2")
+  )
+)
 
 ;; From /usr/src/jhbuild-sources/gst-plugins-base/gst/playback/gstfactorylists.h
 
@@ -2029,17 +2068,6 @@
   )
 )
 
-;; From /usr/src/jhbuild-sources/gst-plugins-base/ext/ogg/gstoggmux.h
-
-(define-enum-extended 
-  (in-module "")
-  (c-name "")
-  (values
-    '("control" "GST_OGG_PAD_STATE_CONTROL" "0")
-    '("data" "GST_OGG_PAD_STATE_DATA" "1")
-  )
-)
-
 ;; From /usr/src/jhbuild-sources/gst-plugins-base/ext/pango/gsttextoverlay.h
 
 (define-enum-extended TextOverlayVAlign
@@ -2067,9 +2095,9 @@
   (c-name "GstTextOverlayWrapMode")
   (values
     '("none" "GST_TEXT_OVERLAY_WRAP_MODE_NONE" "-1")
-    '("word" "GST_TEXT_OVERLAY_WRAP_MODE_WORD" "#error")
-    '("char" "GST_TEXT_OVERLAY_WRAP_MODE_CHAR" "#error")
-    '("word-char" "GST_TEXT_OVERLAY_WRAP_MODE_WORD_CHAR" "#error")
+    '("word" "GST_TEXT_OVERLAY_WRAP_MODE_WORD" "0")
+    '("char" "GST_TEXT_OVERLAY_WRAP_MODE_CHAR" "1")
+    '("word-char" "GST_TEXT_OVERLAY_WRAP_MODE_WORD_CHAR" "2")
   )
 )
 
@@ -2077,21 +2105,35 @@
   (in-module "Gst")
   (c-name "GstTextOverlayLineAlign")
   (values
-    '("left" "GST_TEXT_OVERLAY_LINE_ALIGN_LEFT" "#error")
-    '("center" "GST_TEXT_OVERLAY_LINE_ALIGN_CENTER" "#error")
-    '("right" "GST_TEXT_OVERLAY_LINE_ALIGN_RIGHT" "#error")
+    '("left" "GST_TEXT_OVERLAY_LINE_ALIGN_LEFT" "0")
+    '("center" "GST_TEXT_OVERLAY_LINE_ALIGN_CENTER" "1")
+    '("right" "GST_TEXT_OVERLAY_LINE_ALIGN_RIGHT" "2")
   )
 )
 
 ;; From /usr/src/jhbuild-sources/gst-plugins-base/ext/theora/gsttheoraenc.h
 
-(define-enum-extended 
-  (in-module "")
-  (c-name "")
-  (values
-    '("none" "BORDER_NONE" "0")
-    '("black" "BORDER_BLACK" "1")
-    '("mirror" "BORDER_MIRROR" "2")
+(define-enum-extended TheoraEncBorderMode
+  (in-module "Gst")
+  (c-name "GstTheoraEncBorderMode")
+  (values
+    '("none" "GST_THEORA_ENC_BORDER_NONE" "0")
+    '("black" "GST_THEORA_ENC_BORDER_BLACK" "1")
+    '("mirror" "GST_THEORA_ENC_BORDER_MIRROR" "2")
   )
 )
 
+;; Handwritten for CdParanoiaSrc plugin (values taken from output of
+;; `gst-inspect cdparanoiasrc' -- "paranoia-mode" property information)
+(define-enum-extended GstCdParanoiaSrc
+  (in-module "Gst")
+  (c-name "GstCdParanoiaMode")
+  (values
+    '("disable" "GST_PARANOIA_MODE_DISABLE" "1<<0")
+    '("fragment" "GST_PARANOIA_MODE_FRAGMENT" "1<<1")
+    '("overlap" "GST_PARANOIA_MODE_OVERLAP" "1<<2")
+    '("scratch" "GST_PARANOIA_MODE_SCRATCH" "1<<3")
+    '("repair" "GST_PARANOIA_MODE_REPAIR" "1<<4")
+    '("full" "GST_PARANOIA_MODE_FULL" "0xff")
+  )
+)
