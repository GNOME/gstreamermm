// -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2 -*-

/* gstreamermm - a C++ wrapper for gstreamer
 *
 * Copyright 2008 The gstreamermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Gst
{

Glib::RefPtr<Gst::ChildProxy> ChildProxy::get_proxy_property(const Glib::ustring& name, Glib::ValueBase& value)
{
  gst_child_proxy_get_property(GST_OBJECT(gobj()), name.c_str(), value.gobj());
  return Glib::wrap(gobj(), true);
}

Glib::RefPtr<const Gst::ChildProxy> ChildProxy::get_proxy_property(const Glib::ustring& name, Glib::ValueBase& value) const
{
  gst_child_proxy_get_property(GST_OBJECT(gobj()), name.c_str(), value.gobj());
  return Glib::wrap(const_cast<GstChildProxy*>(gobj()), true);
}

Glib::RefPtr<Gst::ChildProxy> ChildProxy::set_proxy_property(const Glib::ustring& name, const Glib::ValueBase& value)
{
  gst_child_proxy_set_property(GST_OBJECT(gobj()), name.c_str(), value.gobj());
  return Glib::wrap(gobj(), true);
}

void ChildProxy::child_added(const Glib::RefPtr<Gst::Object>& child)
{
  gst_child_proxy_child_added(GST_OBJECT(gobj()), child->gobj());
}

void ChildProxy::child_removed(const Glib::RefPtr<Gst::Object>& child)
{
  gst_child_proxy_child_removed(GST_OBJECT(gobj()), child->gobj());
}

} //namespace Gst
