<root>
<function name="gst_plugin_load_file">
<description>
Loads a plugin from file.
</description>
<parameters>
<parameter name="filename">
<parameter_description> the plugin filename to load
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> pointer to a NULL-valued GError
</parameter_description>
</parameter>
</parameters>
<return> a reference to the existing loaded GstPlugin, a reference to the
newly-loaded GstPlugin, or NULL if an error occurred.
</return>
</function>

<function name="gst_element_factory_make">
<description>
Create a new element of the type defined by the given element factory.


</description>
<parameters>
<parameter name="factoryname">
<parameter_description> a named factory to instantiate
</parameter_description>
</parameter>
<parameter name="name">
<parameter_description> name of new element
</parameter_description>
</parameter>
</parameters>
<return> new #GstElement or NULL if unable to create element
</return>
</function>

<function name="gst_query_type_iterate_definitions">
<description>
Get a #GstIteratorBasic of all the registered query types. The definitions 
iterated over are read only.


</description>
<parameters>
</parameters>
<return> A #GstIteratorBasic of #GstQueryTypeDefinition.
</return>
</function>

<function name="gst_clock_id_wait">
<description>
Perform a blocking wait on the Gst::ClockID. 
The Gst::ClockID should have been created with
Gst::Clock::create_single_shot_id() or Gst::Clock::create_periodic_id()
and should not have been unscheduled with a call to unschedule(). 

If this function returns #GST_CLOCK_OK or #GST_CLOCK_EARLY,
the @jitter argument will contain the difference
against the clock and the time of the Gst::ClockID when this method was
called.
Positive values indicate how late the Gst::ClockID was relative to the clock
(in which case this function will return #GST_CLOCK_EARLY). 
Negative values indicate how much time was spent waiting on the clock 
before this function returned.


</description>
<parameters>
<parameter name="id">
<parameter_description> The #GstClockID to wait on
</parameter_description>
</parameter>
<parameter name="jitter">
<parameter_description> A pointer that will contain the jitter.
</parameter_description>
</parameter>
</parameters>
<return> the result of the blocking wait. #GST_CLOCK_EARLY will be returned
if the current clock time is past the time of the Gst::ClockID, #GST_CLOCK_OK
if Gst::ClockID was scheduled in time. #GST_CLOCK_UNSCHEDULED if Gst::ClockID
was unscheduled with unschedule().

MT safe.
</return>
</function>

<function name="gst_type_find_peek">
<description>
Returns the @size bytes of the stream to identify beginning at offset. If
offset is a positive number, the offset is relative to the beginning of the
stream, if offset is a negative number the offset is relative to the end of
the stream. The returned memory is valid until the typefinding function
returns and must not be freed.

Returns: the requested data, or NULL if that data is not available.

</description>
<parameters>
<parameter name="find">
<parameter_description> The #GstTypeFind object the function was called with
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> The offset
</parameter_description>
</parameter>
<parameter name="size">
<parameter_description> The number of bytes to return
</parameter_description>
</parameter>
</parameters>
<return> the requested data, or NULL if that data is not available.
</return>
</function>

<function name="gst_type_find_suggest">
<description>
If a Gst::TypeFind::SlotFind calls this method it suggests the caps with the
given probability. A Gst::TypeFind::SlotFind may supply different suggestions
in one call.
It is up to the caller of the Gst::TypeFind::SlotFind to interpret these
values.

</description>
<parameters>
<parameter name="find">
<parameter_description> The #GstTypeFind object the function was called with
</parameter_description>
</parameter>
<parameter name="probability">
<parameter_description> The probability in percent that the suggestion is right
</parameter_description>
</parameter>
<parameter name="caps">
<parameter_description> The fixed #GstCaps to suggest
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="gst_type_find_factory_call_function">
<description>
Calls the Gst::TypeFind::SlotFind associated with this factory.

</description>
<parameters>
<parameter name="factory">
<parameter_description> A #GstTypeFindFactory
</parameter_description>
</parameter>
<parameter name="find">
<parameter_description> A properly setup #GstTypeFind entry. The get_data and suggest_type
members must be set.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

</root>
