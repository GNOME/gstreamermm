/* gstreamermm - a C++ wrapper for gstreamer
 *
 * Copyright 2008 The gstreamermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Gst
{

void TagSetter::add_tag(Tag tag, const Glib::ValueBase& value,
  TagMergeMode mode)
{
  gst_tag_setter_add_tag_values(gobj(), (GstTagMergeMode) mode,
    gstreamermm_get_stock_tag(tag), value.gobj(), (void*)0);
}

void TagSetter::add_tag(const Glib::ustring& tag, const Glib::ValueBase& value,
  TagMergeMode mode)
{
  gst_tag_setter_add_tag_values(gobj(), (GstTagMergeMode) mode, tag.c_str(),
    value.gobj(), (void*)0);
}

void TagSetter::add_tag(Tag tag, const char* data, TagMergeMode mode)
{
  gst_tag_setter_add_tags(gobj(), (GstTagMergeMode) mode,
    gstreamermm_get_stock_tag(tag), data, (void*)0);
}

void TagSetter::add_tag(const Glib::ustring& tag, const char* data,
  TagMergeMode mode)
{
  gst_tag_setter_add_tags(gobj(), (GstTagMergeMode) mode, tag.c_str(),
    data, (void*)0);
}

} //namespace Gst
