// -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2 -*-

/* gstreamermm - a C++ wrapper for gstreamer
 *
 * Copyright 2008 The gstreamermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <fcntl.h>
#include <errno.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <gst/gstxml.h>
#include <gstreamermm/element.h>

namespace Gst
{

bool XML::parse_memory(const std::string& buffer, const std::string& root)
{
  return gst_xml_parse_memory(this->gobj(),(guchar*)(buffer.c_str()), buffer.size(), root.c_str());
}

xmlDocPtr write_xml(const Glib::RefPtr<Element>& element)
{
  return gst_xml_write(element->gobj());
}

int write_xml_file(const Glib::RefPtr<Element>& element, const std::string& filename)
{
  int file = creat(filename.c_str(), O_EXCL);
  int result = gst_xml_write_file(element->gobj(),(FILE*) file);
  int errsv = errno;
  close(file);
  if(result == -1)
    throw Glib::FileError(Glib::FileError::Code(errsv), "failed to write xml file: '" + filename + "'");
  else
    return result;
}

Glib::RefPtr<Element> make_element(const xmlNodePtr& xml_node, const Glib::RefPtr<Object>& parent)
{
  return Glib::wrap(gst_xml_make_element(xml_node, parent->gobj()));
}

} //namespace Gst
