/* gstreamermm - a C++ wrapper for gstreamer
 *
 * Copyright 2008 The gstreamermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gst/base/gstpushsrc.h>
#include <gstreamermm/basesrc.h>

_DEFS(gstreamermm,gst)

namespace Gst
{
/** A base class for push based source elements.
 * This class is mostly useful for elements that cannot do random access, or at
 * least very slowly. The source usually prefers to push out a fixed size
 * buffer.
 *
 * Subclasses usually operate in a format that is different from the default
 * Gst::FORMAT_BYTES format of Gst::BaseSrc.
 *
 * Classes extending this base class will usually be scheduled in a push based
 * mode. If the peer accepts to operate without offsets and within the limits
 * of the allowed block size, this class can operate in getrange based mode
 * automatically. To make this possible, the subclass should override the
 * Gst::BaseSrc::check_get_range_vfunc() method.
 *
 * The subclass should extend the methods from the baseclass in addition to the
 * GstBaseSrc::create_vfunc() method.
 *
 * Seeking, flushing, scheduling and sync is all handled by this base class.
 *
 * Last reviewed on 2006-07-04 (0.10.9).
 *
 * @ingroup GstBaseClasses
 */
class PushSrc
: public BaseSrc
{
  _CLASS_GOBJECT(PushSrc, GstPushSrc, GST_PUSH_SRC, BaseSrc, GstBaseSrc)
};

} //namespace Gst
