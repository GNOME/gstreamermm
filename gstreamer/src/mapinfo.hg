/* gstreamermm - a C++ wrapper for gstreamer
 *
 * Copyright 2013-2016 The gstreamermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gst/gst.h>

_DEFS(gstreamermm,gst)

namespace Gst
{

class Memory;

_WRAP_ENUM(MapFlags, GstMapFlags)

/* A structure containing the result of a map operation such as
 * Memory::map(). It contains the data and size.
 *
 * Last reviewed on 2016-06-05 (1.8.0)
 */
class MapInfo
{
  _CLASS_GENERIC(MapInfo, GstMapInfo)
public:
  MapInfo();

  explicit MapInfo(const GstMapInfo& castitem);

  MapInfo(MapInfo&& other);
  MapInfo& operator=(MapInfo&& other);

  /** Get flags used when mapping the memory.
   */
  _MEMBER_GET(flags, flags, MapFlags, GstMapFlags)

  /** Get a pointer to the mapped data.
   */
  _MEMBER_GET_PTR(data, data, guint8*, guint8*)

  /** Get the maximum bytes in data.
   */
  _MEMBER_GET(maxsize, maxsize, gsize, gsize)

  /** Get the valid size in data.
   */
  _MEMBER_GET(size, size, gsize, gsize)

  /** Get a Glib::RefPtr to the mapped memory.
   */
  _MEMBER_GET_GOBJECT(memory, memory, Gst::Memory, GstMemory*)

  GstMapInfo* gobj() { return &m_spec; };
  const GstMapInfo* gobj() const { return &m_spec; };

protected:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  GstMapInfo m_spec;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */
};

}//namespace Gst
