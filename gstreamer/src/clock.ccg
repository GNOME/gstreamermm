// -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2 -*-

/* gstreamermm - a C++ wrapper for gstreamer
 *
 * Copyright 2008 The gstreamermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gst/gstclock.h>

namespace Gst
{

guint get_hours(ClockTime time)
{
  return GST_CLOCK_TIME_IS_VALID (time) ? \
        (guint) (((GstClockTime)(time)) / (GST_SECOND * 60 * 60)) : 99;
}

guint get_minutes(ClockTime time)
{
  return GST_CLOCK_TIME_IS_VALID (time) ? \
        (guint) ((((GstClockTime)(time)) / (GST_SECOND * 60)) % 60) : 99;
}

guint get_seconds(ClockTime time)
{
  return GST_CLOCK_TIME_IS_VALID (time) ? \
        (guint) ((((GstClockTime)(time)) / GST_SECOND) % 60) : 99;
}

guint get_milliseconds(ClockTime time)
{
  return GST_CLOCK_TIME_IS_VALID (time) ? \
        (guint) ((((GstClockTime)(time)) / GST_MSECOND) % 1000) : 999;
}

guint get_microseconds(ClockTime time)
{
  return GST_CLOCK_TIME_IS_VALID (time) ? \
        (guint) ((((GstClockTime)(time)) / GST_USECOND) % 1000) : 999;
}

guint get_nanoseconds(ClockTime time)
{
  return GST_CLOCK_TIME_IS_VALID (time) ? \
        (guint) ((((GstClockTime)(time)) / GST_NSECOND) % 1000) : 999;
}

guint get_fractional_seconds(ClockTime time)
{
  return GST_CLOCK_TIME_IS_VALID (time) ? \
        (guint) (((GstClockTime)(time)) % GST_SECOND) : 999999999;
}

} //namespace Gst
