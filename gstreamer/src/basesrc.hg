// -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2 -*-

/* gstreamermm - a C++ wrapper for gstreamer
 *
 * Copyright 2008 The gstreamermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gstreamermm/element.h>
#include <gstreamermm/pad.h>
#include <gstreamermm/format.h>
#include <gstreamermm/clock.h>

_DEFS(gstreamermm,gst)

namespace Gst
{

/** Gst::BaseSrc â€” Base class for getrange based source elements.
 */
class BaseSrc
: public Element
{
  _CLASS_GOBJECT(BaseSrc, GstBaseSrc, GST_BASE_SRC, Element, GstElement)

public:
  _WRAP_METHOD(FlowReturn wait_playing(), gst_base_src_wait_playing)
  _WRAP_METHOD(bool is_live(), gst_base_src_is_live)
  _WRAP_METHOD(void set_live(bool live), gst_base_src_set_live)
  _WRAP_METHOD(void set_format(Format format), gst_base_src_set_format)
  _WRAP_METHOD(bool query_latency(bool& live, ClockTime& min_latency, ClockTime& max_latency), gst_base_src_query_latency)
  _WRAP_METHOD(bool get_do_timestamp(), gst_base_src_get_do_timestamp)
  _WRAP_METHOD(void set_do_timestamp(bool timestamp), gst_base_src_set_do_timestamp)

  /** Gets the source Gst::Pad object of the element.
   */
  _MEMBER_GET(src_pad, srcpad, Glib::RefPtr<Pad>, GstPad*)

  _WRAP_PROPERTY("blocksize", gulong)
  _WRAP_PROPERTY("do-timestamp", bool)
  _WRAP_PROPERTY("num-buffers", int)
  _WRAP_PROPERTY("typefind", bool)
};

} //namespace Gst
